input {
  jdbc {
    type => "jdbc"
    jdbc_driver_library => "/usr/share/java/postgresql-42.7.2.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://postgres:5432/transcendence"
    jdbc_user => "transcendencer"
    jdbc_password => "transcendencer"
    schedule => "*/2 * * * *"
    statement => "select * from users_customuser;"
  }
  gelf {
      type => "gelf"
      port => 1337  # The port you specified in the Docker Compose file
  }
}

filter {
      if [type] == "gelf" {
          grok {
            match => { "message" => "::ffff:%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:request_method} %{URIPATH:requested_resource} HTTP/%{NUMBER:http_version}\" %{NUMBER:status_code:int} %{NUMBER:bytes_sent:int} \"%{DATA:referrer}\" \"%{DATA:user_agent}\"" }
          }
          date {
            match => [ "timestamp", "dd/MMM/yyyy HH:mm:ss" ]
            target => "timestamp"
          }
          mutate {
            remove_field => ["host"]
            remove_field => ["message"]
          }
      }
}

output {
   if [type] == "gelf" {
      elasticsearch {
        hosts => "${ELASTIC_HOSTS}"
        user => "${ELASTIC_USER}"
        password => "${ELASTIC_PASSWORD}"
        cacert => "certs/ca/ca.crt"
        ilm_enabled => true
        ilm_pattern => "000001"
        ilm_rollover_alias => "containers_logs"
        ilm_policy => "containers_logs_policy"
        manage_template => true
        template_name => "app_logs_template"
        template => "/usr/share/logstash/app_logs_template.json"
        template_overwrite => true
    }
  }
  else {
      elasticsearch {
        hosts => "${ELASTIC_HOSTS}"
        user => "${ELASTIC_USER}"
        password => "${ELASTIC_PASSWORD}"
        cacert => "certs/ca/ca.crt"
        ilm_enabled => true
        ilm_pattern => "000001"
        ilm_rollover_alias => "users_data"
        ilm_policy => "users_data_policy"
        manage_template => true
        template_name => "users_data_template"
        template => "/usr/share/logstash/users_data_template.json"
        template_overwrite => true
    }
  }
}